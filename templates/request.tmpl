// This code is auto-generated by curly
package main

import (
    {{- range $val := .imports}}
    "{{$val}}"
    {{- end}}
)

func main() {
    var wg sync.WaitGroup
    var chunkSize int

    numReqs := {{.opts.NumReqs}}
    concurrentReqs := {{.opts.ConcurrentReqs}}
    sleepDuration, _ := time.ParseDuration("{{.opts.SleepDuration}}")

    for i := 0; i < numReqs; i+= concurrentReqs {
        if i + concurrentReqs < numReqs {
            chunkSize = concurrentReqs
        } else {
            chunkSize = numReqs - i
        }

        for r := 0; r < chunkSize; r++ {
            wg.Add(1)

            go func() {
                defer wg.Done()
                request()
            }()
        }

        wg.Wait()

        time.Sleep(sleepDuration)
    }
}

func request() {
{{ .code }}
        respBody, err := io.ReadAll(resp.Body)

        if err != nil {
            fmt.Println(err)
            return
        }

        fmt.Println(string(respBody))
}
